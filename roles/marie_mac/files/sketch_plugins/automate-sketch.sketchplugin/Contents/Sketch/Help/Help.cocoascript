@import "../Libraries/Google_Analytics.cocoascript";

var reportIssue = function(context) {
    openUrlInBrowser("https://github.com/Ashung/Automate-Sketch/issues/");
    ga(context, "UA-99098773-3", "Help", context.command.identifier());
};

var website = function(context) {
    openUrlInBrowser("http://ashung.github.io/Automate-Sketch/");
    ga(context, "UA-99098773-3", "Help", context.command.identifier());
};

var donate = function() {
    openUrlInBrowser("https://ashung.github.io/donate.html?ref=automate-sketch");
    ga(context, "UA-99098773-3", "Help", context.command.identifier());
};

function checkForUpdates(context) {
    var remoteManifestUrl = "https://github.com/Ashung/Automate-Sketch/raw/master/automate-sketch.sketchplugin/Contents/Sketch/manifest.json"
    var remoteManifest = getRemoteJson(remoteManifestUrl);
    var localVersion = context.plugin.version();
    if (remoteManifest.version) {
        if (localVersion == remoteManifest.version) {
            var app = NSApplication.sharedApplication();
            app.displayDialog_withTitle(
                "Automate Sketch " + localVersion + " is currently the newest version available.",
                "You are up-to-date."
            );
        } else {
            var alert = NSAlert.alloc().init();
            alert.setMessageText("New version available. (" + remoteManifest.version + ")");
            alert.setInformativeText(
                "You are use the old verion of Automate Sketch. (" +
                localVersion + ")\n" +
                "Click \"OK\" to download newest version.");
            alert.addButtonWithTitle("OK");
            alert.addButtonWithTitle("Cancel");
            var responseCode = alert.runModal();
            if(responseCode == 1000) {
                openUrlInBrowser("https://github.com/Ashung/Automate-Sketch/archive/master.zip");
            }
        }
    } else {
        var app = NSApplication.sharedApplication();
        app.displayDialog_withTitle(
            "Please visite the web site and download newest version.\n" + context.plugin.homepageURL(),
            "Can not check for updates."
        );
    }
    ga(context, "UA-99098773-3", "Help", context.command.identifier());
}

function getRemoteJson(url) {
    var request = NSURLRequest.requestWithURL(NSURL.URLWithString(url));
    var response = NSURLConnection.sendSynchronousRequest_returningResponse_error(request, null, null);
    var content = NSString.alloc().initWithData_encoding(response, NSUTF8StringEncoding);
    return JSON.parse(content);
}

function openUrlInBrowser(url) {
    NSWorkspace.sharedWorkspace().openURL(NSURL.URLWithString(url));
}
